[
  {
    "id": 100,
    "date": "2020/01/09",
    "title": "Deployment Manager",
    "itemList": [
      {
        "text": "<p>A configuration describes all the resources you want for a single deployment. A configuration is a file written in YAML syntax that lists each of the resources you want to create and its respective resource properties. A configuration must contain a <b>resources:</b> section followed by the list of resources to create.</p>",
        "image": ""
      },
      {
        "text": "<p>Each resource must contain three components:</p><ol><li><b>name</b> - A user-defined string to identify this resource such as my-vm, project-data-disk, the-test-network.</li><li><b>type</b> - The type of the resource being deployed such as compute.v1.instance, compute.v1.disk. The base resource types are described and listed on the Supported Resource Types documentation.</li><li><b>properties</b> - The parameters for this resource type. They must match the properties for the type such as zone: asia-east1-a, boot: true.</li></ol>",
        "image": ""
      }
    ]
  },
  {
    "id": 200,
    "date": "2018/12/31",
    "title": "Kubernetes Engine Quick Start on GCP",
    "itemList": [
      {
        "text": "<p>Prerequisites: <ul><li>You have an GCP account</li><li>You have an GCP project</li><li>You have a Docker image created and stored in a repostory</li></p>",
        "image": ""
      },
      {
        "text": "<b>Steps</b><ol><li>Log into GCP console</li><li>Select the project you want work on</li><li>Activate Google Cloud Shell on GCP console</li><li>Click 'START CLOUD SHELL' button</li><li>Verify that the cloud shell is associated with your project ID</li><li>Use <mark>gcloud auth list</mark> to the active account name</li><li>Use <mark>gcloud config list project</mark> to display the project ID</li><li>Use <mark>gcloud config set compute/zone us-central1-a</mark> to set a default compute zone</li><li>Use <mark>gcloud container clusters create <i>myclusterName-all-lowercase</i></mark> to create a cluster</li><li>Use <mark>gcloud container clusters get-credentials <i>mycluster</i></mark> to authenticate the cluster</li><li>Use <mark>kubectl run <i>myDeploymentName</i> --image=<i>myImageRepostoryURI</i> --port 8080</mark> to create a new Deployment named myDeploymentName</li><li>Use <mark>kubectl expose deployment <i>myDeploymentName</i> --type='LoadBalancer'</mark> to create a Kubernetes Service</li><li>Use <mark>kubectl get service <i>myDeploymentName</i></mark> to inspect the service</li><li>From the previous command's output, copy the Service's external IP address from the EXTERNAL IP column</li><li>Use <mark>http://<i>EXTERNAL-IP</i>:8080</mark> to view the application</li></ol>",
        "image": ""
      }
    ]
  },
  {
    "id": 300,
    "date": "2019/02/04",
    "title": "Deploy a Spring App on GCP Kubernetes",
    "itemList": [
      {
        "text": "<p>Prerequisites: <ul><li>You have an GCP account</li><li>You have an GCP project</li><li>you need to <a href='https://console.cloud.google.com/billing'>enable billing</a> in the Cloud Console in order to use Google Cloud resources.</li><li>APIs enabled: Google Container Registry API</li></p>",
        "image": ""
      },
      {
        "text": "<b>Steps</b><ol><li>Log into GCP console</li><li>Select the project you want work on</li><li>Activate Google Cloud Shell on GCP console</li><li>Click 'START CLOUD SHELL' button</li><li>Verify that the cloud shell is associated with your project ID</li><li>Use <mark>git clone https://github.com/spring-guides/gs-spring-boot.git</mark> to get source code in your GCP home directory</li><li>Use <mark>cd gs-spring-boot/complete</mark> to change to the project root folder</li><li>Use <mark>./mvnw -DskipTests spring-boot:run</mark> to start the Spring Boot application normally with the Spring Boot plugin in GCP local</li><li>Once the application started, click on the Web Preview icon in the Cloud Shell toolbar and choose preview on port 8080</li><li>Use <mark>./mvnw -DskipTests package</mark> to create the JAR deployable for the application</li><li>Use <mark>./mvnw -DskipTests com.google.cloud.tools:jib-maven-plugin:build -Dimage=gcr.io/$GOOGLE_CLOUD_PROJECT/hello-java:v1</mark> to create a new Deployment named hello-java</li> If all goes well and after a little while you should be able to see the container image listed in the console: Tools > Container Registry. At this point you now have a project-wide Docker image available which Kubernetes can access and orchestrate.<li>Use <mark>docker run -ti --rm -p 8080:8080 gcr.io/$GOOGLE_CLOUD_PROJECT/hello-java:v1</mark> to test the image locally with the following command which will run a Docker container as a daemon on port 8080 from your newly-created container image</li><li>Use <mark>gcloud container clusters create hello-java-cluster --num-nodes 2 --machine-type n1-standard-1 --zone us-central1-c</mark> to create a cluster with two n1-standard-1 nodes</li><li>Use <mark>kubectl run hello-java --image=gcr.io/$GOOGLE_CLOUD_PROJECT/hello-java:v1 --port=8080</mark> to deploy one instance of your application into Kubernetes</li><li>Use <mark>kubectl get deployments</mark> to view the deployment you just created</li><li>Use <mark>kubectl get pods</mark> to view the application instances created by the deployment</li><li>Use <mark>kubectl expose deployment hello-java --type=LoadBalancer</mark> to expose the pod as a kubernetes service</li><li>Use <mark>kubectl get services</mark> to list all the cluster services</li><li>Use <mark>kubectl scale deployment hello-java --replicas=3</mark> to to scale the service</li><li>Use <mark>kubectl get deployment</mark> to verify it</li><li>Open the code editor from Cloud Shell, and change some code</li><li>Use <mark>./mvnw -DskipTests package</mark> to rebuild the app</li><li>Use <mark>./mvnw -DskipTests com.google.cloud.tools:jib-maven-plugin:build -Dimage=gcr.io/$GOOGLE_CLOUD_PROJECT/hello-java:v2</mark> to build and push a v2 of the container image</li><li>Use <mark>kubectl set image deployment/hello-java hello-java=gcr.io/$GOOGLE_CLOUD_PROJECT/hello-java:v2</mark> deploy the new version of your application across the entire cluster one instance at a time with rolling update</li><li>Go to GCP/Kubernetes Engine/Services, then click endpoint of the 'hello-java' to verify the updates</li><li>Use <mark>kubectl rollout undo deployment/hello-java</mark> to rollback the application if updates are not successful.</ol>",
        "image": ""
      }
    ]
  },
  {
    "id": 400,
    "date": "2019/11/14",
    "title": "Install Helm on GCP",
    "itemList": [
      {
        "text": "<p>The following steps show how to install Helm on GCP kubernetes cluster using scripts.</p>",
        "image": ""
      },
      {
        "text": "<div class='jumbotron'><p>curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh<br>chmod 700 get_helm.sh<br>./get_helm.sh</p></div>",
        "image": ""
      }
    ]
  },
  {
    "id": 500,
    "date": "2020/02/27",
    "title": "Administer A k8s Cluster",
    "itemList": [
      {
        "text": "<p><code>KUBE_GCE_ZONE=europe-west1-c KUBE_REPLICATE_EXISTING_MASTER=true ./cluster/kube-up.sh</code> - replicates the master on an existing HA-compatible cluster.</p>",
        "image": ""
      },
      {
        "text": "<p><code>KUBE_DELETE_NODES=false KUBE_GCE_ZONE=europe-west1-c ./cluster/kube-down.sh</code> - removes a master replica from an existing HA cluster.</p>",
        "image": ""
      }
    ]
  },
  {
    "id": 1000,
    "date": "2019/12/19",
    "title": "gcloud CLI",
    "itemList": [
      {
        "text": "<p><code>curl -sS https://get.k8s.io | MULTIZONE=true KUBERNETES_PROVIDER=gce KUBE_GCE_ZONE=us-central1-a NUM_NODES=3 bash</code> - create the cluster as normal, but pass MULTIZONE to tell the cluster to manage multiple zones</p>",
        "image": ""
      },
      {
        "text": "<p><code>KUBERNETES_PROVIDER=gce KUBE_GCE_ZONE=us-central1-a kubernetes/cluster/kube-down.sh</code> - clean up the above Cluster</p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud builds submit --config cloudbuild.yaml .</code> - use a build config file to build the same Docker image as below.</p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud builds submit --tag gcr.io/[PROJECT_ID]/quickstart-image .</code> - The '.' specifies that the source code is in the current working directory at build time. This builds a Docker image named quickstart-image using a Dockerfile and pushed the image to Container Registry.</p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud compute firewall-rules create my-rule --allow=tcp:<port></code> - to add a firewall with the gcloud command line tool. When using a Service with spec.type: LoadBalancer, the firewall will be opened automatically.</p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud compute instances reset the-first-vm</code> - to restart VM named 'the-first-vm'</p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud compute instances describe the-first-vm | grep 'natIP'</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud config set project $PROJECT_ID</code> - to set your project</p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud config unset project</code> - To unset your project</p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud config set compute/zone us-east1-b</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud container clusters create hello-cluster --num-nodes=2</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud container clusters create hello-cluster --enable-autoprovisioning : --autoprovisioning-config-file=AUTOPROVISIONING_CONFIG_FILE</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud container clusters create hello-cluster --enable-autoscaling --max-nodes=MAX_NODES --min-nodes=MIN_NODES</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud container clusters delete hello-cluster</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud container clusters get-credentials hello-cluster --zone <i>zone-name</i></code> - If you are using an existing Google Kubernetes Engine cluster or if you have created a cluster through Google Cloud Console, you need to run this command to retrieve cluster credentials and configure kubectl command-line tool with them</p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud container clusters get-credentials your-first-cluster-1 --zone us-central1-a</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud container clusters get-credentials <i>cluster_name</i> --zone <i>zone_name</i> --project <i>project_id</i></code></p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud container clusters resize standard-cluster-1 --zone us-central1-a --num-nodes 2</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud deployment-manager deployments create quickstart-deployment --config <i>config file</i></code></p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud deployment-manager deployments describe quickstart-deployment</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud deployment-manager deployments update deployment-to-update --config config-with-many-templates.yaml --preview</code> - to preview the updated deployment, run the update command with a --preview flag</p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud deployment-manager deployments update deployment-to-update --config config-with-many-templates.yaml</code></p>",
        "image": ""
      }
    ]
  },
  {
    "id": 5000,
    "date": "2020/02/02",
    "title": "Interview",
    "itemList": [
      {
        "text": "<ol><li><b>What are Authentication strategies for Accessing GCP API?</b><p><ul><li>API key</li><li>OAuth 2.0 </li><li>Service account</li></ul></li></ol>",
        "image": ""
      }
    ]
  }
]