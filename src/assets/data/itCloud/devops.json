[
  {
    "id": 100,
    "date": "2019/11/29",
    "title": "Branch Strategy",
    "itemList": [
      {
        "text": "<p>Keep your branch strategy simple. Build your strategy from these three concepts:</p><p><ol><li>Use feature branches for all new features and bug fixes.</li><li>Merge feature branches into the master branch using pull requests.</li><li>Keep a high quality, up-to-date master branch.</li></ol></p>",
        "image": ""
      }
    ]
  },
  {
    "id": 200,
    "date": "2019/12/18",
    "title": "Release Strategy",
    "itemList": [
      {
        "text": "<p><ul><li>Canary release is a technique that is used to reduce the risk of introducing a new software version in production by gradually rolling out the change to a small subgroup of users, before rolling it out to the entire platform/infrastructure and making it available to everybody.</li></ul></p>",
        "image": ""
      }
    ]
  },
  {
    "id": 300,
    "date": "2020/01/08",
    "title": "8 Ways to Keep CI/CD Pipeline Working",
    "itemList": [
      {
        "text": "<p><ol><li>No check-ins when the build is broken</li><li>Run tests and code analysis before check-in</li><li>Refresh the database for data-driven tests</li><li>Automated Acceptance Tests (AATs)</li><li>Delegate enforcement to each team</li><li>Report metrics visibly to all teams and management</li><li>Require pull requests</li><li>Peer code review each story</li></ol></p>",
        "image": ""
      }
    ]
  },
  {
    "id": 400,
    "date": "2019/11/30",
    "title": "Steps to Choose Right Tools",
    "itemList": [
      {
        "text": "<p>If you’re considering DevOps, you have many moving parts to consider. Core to this structure are automated provisioning, automated testing, and automated build and deployment. At the same time, you need to maintain continuous feedback, with information continuously moving back and forth, as well as making sure that you log pretty much everything.<p><ul><li>Understand the collaboration and shared tools strategy for the Dev, QA, and infrastructure automation teams</li><li>Use tools to capture every request</li><li>Use agile Kanban project management for automation and DevOps requests that can be dealt with in the tooling</li><li>Use tools to log metrics on both manual and automated processes</li><li>Implement test automation and test data provisioning tooling</li><li>Perform acceptance tests for each deployment tooling</li><li>Ensure continuous feedback between the teams to spot gaps, issues, and inefficiencies</li></ul></p>",
        "image": ""
      }
    ]
  },
  {
    "id": 500,
    "date": "2019/11/30",
    "title": "Chef, Puppet, Ansible, and SaltStack",
    "itemList": [
      {
        "text": "<p>Chef, Puppet, Ansible, and SaltStack are industry-wide used DevOps tools, included in DevOps Certification. They are all “configuration management” tools, which means they are designed to deploy, configure and manage servers. The below table depicts the overview of the metrics of these tools:</p>",
        "image": "../assets/image/itCloud/devops/devOpsTools.png",
        "imageClass": "mx-auto d-block"
      }
    ]
  }
]