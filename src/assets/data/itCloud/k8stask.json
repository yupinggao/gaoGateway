[
  {
    "id": 100,
    "date": "2020/01/14",
    "title": "Create Secrets",
    "itemList": [
      {
        "text": "<p>A Secret is an object that contains a small amount of sensitive data such as a password, a token, or a key. Such information might otherwise be put in a Pod specification or in an image; putting it in a Secret object allows for more control over how it is used, and reduces the risk of accidental exposure.</p><p>Users can create secrets, and the system also creates some secrets. To use a secret, a pod needs to reference the secret. A secret can be used with a pod in two ways: as files in a volume mounted on one or more of its containers, or used by kubelet when pulling images for the pod.</p>",
        "image": ""
      },
      {
        "text": "<p>Secrets can be mounted as data volumes or be exposed as environment variables to be used by a container in a pod. They can also be used by other parts of the system, without being directly exposed to the pod. For example, they can hold credentials that other parts of the system should use to interact with external systems on your behalf.</p>",
        "image": ""
      },
      {
        "text": "<p><b>Create files needed for rest of example: </b><ul><li><code>echo -n 'admin' > ./username.txt</code></li><li><code>echo -n '1f2d1e2e67df' > ./password.txt</code></li></ul></p>",
        "image": ""
      },
      {
        "text": "<p><b>The kubectl create secret command packages these files into a Secret and creates the object on the Apiserver: </b><code>kubectl create secret generic db-user-pass --from-file=./username.txt --from-file=./password.txt</code></p>",
        "image": ""
      },
      {
        "text": "<p><b>Check the secrets: </b><code>kubectl get secrets</code><br><code>kubectl describe secrets/db-user-pass</code></p>",
        "image": ""
      },
      {
        "text": "<p><b>Retrieved the secret: </b><code>kubectl get secret db-user-pass -o yaml</code></p>",
        "image": ""
      },
      {
        "text": "<p><b>Decode the password field: </b><code>echo 'MWYyZDFlMmU2N2Rm' | base64 --decode</code></p>",
        "image": ""
      }
    ]
  }
]