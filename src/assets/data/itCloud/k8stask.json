[
  {
    "id": 100,
    "date": "2020/05/08",
    "title": "Exploring App",
    "itemList": [
      {
        "text": "<p><code>kubectl proxy</code> - note: in a new terminal</p>",
        "image": ""
      },
      {
        "text": "<p><code>export POD_NAME=$(kubectl get pods -o go-template --template '{{range .items}}{{.metadata.name}}{{'\\n'}}{{end}}') echo Name of the Pod: $POD_NAME</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>curl http://localhost:8001/api/v1/namespaces/default/pods/$POD_NAME/proxy/</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl logs $POD_NAME</code> - view container log</p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl exec $POD_NAME envs</code> - list the environment variables</p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl exec -ti $POD_NAME bash</code> - start a bash session in the Podâ€™s container</p>",
        "image": ""
      },
      {
        "text": "<p><code>cat server.js</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>curl localhost:8080</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>exit</code></p>",
        "image": ""
      }
    ]
  },
  {
    "id": 200,
    "date": "2020/05/08",
    "title": "Exposing App",
    "itemList": [
      {
        "text": "<p><code>kubectl expose deployment/kubernetes-bootcamp --type='NodePort' --port 8080</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl describe services/kubernetes-bootcamp</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>export NODE_PORT=$(kubectl get services/kubernetes-bootcamp -o go-template='{{(index .spec.ports 0).nodePort}}') echo NODE_PORT=$NODE_PORT</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>curl $(minikube ip):$NODE_PORT</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl get pods -l run=kubernetes-bootcamp</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl get services -l run=kubernetes-bootcamp</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>export POD_NAME=$(kubectl get pods -o go-template --template '{{range .items}}{{.metadata.name}}{{'\\n'}}{{end}}') echo Name of the Pod: $POD_NAME</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl label pod $POD_NAME app=v1</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl delete service -l run=kubernetes-bootcamp</code></p>",
        "image": ""
      }
    ]
  },
  {
    "id": 300,
    "date": "2020/05/08",
    "title": "Scale App",
    "itemList": [
      {
        "text": "<p><code>kubectl get deployments</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl get rs</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl scale deployments/kubernetes-bootcamp --replicas=4</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl get deployments</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl get pods -o wide</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl describe deployments/kubernetes-bootcamp</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl describe services/kubernetes-bootcamp</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>export NODE_PORT=$(kubectl get services/kubernetes-bootcamp -o go-template='{{(index .spec.ports 0).nodePort}}') echo NODE_PORT=$NODE_PORT</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>curl $(minikube ip):$NODE_PORT</code></p>",
        "image": ""
      }
    ]
  },
  {
    "id": 400,
    "date": "2020/05/08",
    "title": "Rolling Update",
    "itemList": [
      {
        "text": "<p><code>kubectl get deployments</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl get pods</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl describe pods</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl set image deployments/kubernetes-bootcamp kubernetes-bootcamp=jocatalin/kubernetes-bootcamp:v2</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl get pods</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl describe services/kubernetes-bootcamp</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>export NODE_PORT=$(kubectl get services/kubernetes-bootcamp -o go-template='{{(index .spec.ports 0).nodePort}}') echo NODE_PORT=$NODE_PORT</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>curl $(minikube ip):$NODE_PORT</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl rollout status deployments/kubernetes-bootcamp</code> - see the Deployment rollout status</p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl describe pods</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl set image deployments/kubernetes-bootcamp kubernetes-bootcamp=gcr.io/google-samples/kubernetes-bootcamp:v10</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl get deployments</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl get pods</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl describe pods</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl rollout undo deployments/kubernetes-bootcamp</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl get pods</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl describe pods</code></p>",
        "image": ""
      }
    ]
  },
  {
    "id": 500,
    "date": "2020/05/09",
    "title": "Redis using a ConfigMap",
    "itemList": [
      {
        "text": "<p><code>gcloud container clusters create temp-c --num-nodes=1 --zone us-central1-a</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>curl -OL https://k8s.io/examples/pods/config/redis-config</code></p>",
        "image": "../assets/image/itCloud/k8sTask/1.PNG"
      },
      {
        "text": "<p><code>curl -OL https://raw.githubusercontent.com/kubernetes/website/master/content/en/examples/pods/config/redis-pod.yaml</code></p>",
        "image": "../assets/image/itCloud/k8sTask/2.PNG"
      },
      {
        "text": "<p><code>kubectl apply -k .</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl get -k .</code> - examine the created objects</p>",
        "image": ""
      },
      {
        "text": "<p><code>In the example, the config volume is mounted at /redis-master. It uses path to add the redis-config key to a file named redis.conf. The file path for the redis config, therefore, is /redis-master/redis.conf. This is where the image will look for the config file for the redis master.</code></p><p>Use kubectl exec to enter the pod and run the redis-cli tool to verify that the configuration was correctly applied:</p>",
        "image": "../assets/image/itCloud/k8sTask/3.PNG"
      },
      {
        "text": "<p><code>kubectl exec -it redis bash</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>cd /redis-master</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>cat redis.conf</p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl delete pod redis</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>gcloud container clusters delete temp-c --zone us-central1-a</code></p>",
        "image": ""
      }
    ]
  },
  {
    "id": 600,
    "date": "2020/05/09",
    "title": "Exposing an External IP",
    "itemList": [
      {
        "text": "<p><code>kubectl apply -f load-balancer-example.yaml</code></p>",
        "image": "../assets/image/itCloud/k8sTask/4.PNG"
      },
      {
        "text": "<p><code>kubectl get deployments hello-world</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl describe deployments hello-world</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl get replicasets</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl describe replicasets</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl expose deployment hello-world --type=LoadBalancer --name=my-service</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl get services my-service</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl describe services my-service</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl get pods --output=wide</p>",
        "image": ""
      },
      {
        "text": "<p>http://external-ip:port. e.g. http://35.226.116.169:8080</p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl delete services my-service</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl delete deployment hello-world</p>",
        "image": ""
      }
    ]
  },
  {
    "id": 700,
    "date": "2020/05/09",
    "title": "Application with Redis",
    "itemList": [
      {
        "text": "<p><code>gcloud container clusters resize temp-c --zone us-central1-a --num-nodes 2</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl apply -f https://k8s.io/examples/application/guestbook/redis-master-deployment.yaml</code></p>",
        "image": "../assets/image/itCloud/k8sTask/5.PNG"
      },
      {
        "text": "<p><code>kubectl get pods</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl logs -f redis-master-596696dd4-bhxcq</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl apply -f https://k8s.io/examples/application/guestbook/redis-master-service.yaml</code></p>",
        "image": "../assets/image/itCloud/k8sTask/6.PNG"
      },
      {
        "text": "<p><code>kubectl get service</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl apply -f https://k8s.io/examples/application/guestbook/redis-slave-deployment.yaml</code></p>",
        "image": "../assets/image/itCloud/k8sTask/7.PNG"
      },
      {
        "text": "<p><code>kubectl get pods</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl apply -f https://k8s.io/examples/application/guestbook/redis-slave-service.yaml</p>",
        "image": "../assets/image/itCloud/k8sTask/8.PNG"
      },
      {
        "text": "<p><code>kubectl get services</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl apply -f https://k8s.io/examples/application/guestbook/frontend-deployment.yaml</p>",
        "image": "../assets/image/itCloud/k8sTask/9.PNG"
      },
      {
        "text": "<p><code>kubectl get pods -l app=guestbook -l tier=frontend</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl apply -f frontend-service-lb.yaml</code></p>",
        "image": "../assets/image/itCloud/k8sTask/10.PNG"
      },
      {
        "text": "<p><code>kubectl get service frontend-lb</code></p>",
        "image": ""
      },
      {
        "text": "<p>http://external-ip:port. e.g. http://35.188.81.39:80</p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl scale deployment frontend --replicas=2</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl get pods</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl delete deployment -l app=redis</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl delete service -l app=redis</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl delete deployment -l app=guestbook</code></p>",
        "image": ""
      },
      {
        "text": "<p><code>kubectl delete service -l app=guestbook</code></p>",
        "image": ""
      }
    ]
  },
  {
    "id": 2000,
    "date": "2020/01/14",
    "title": "Create Secrets",
    "itemList": [
      {
        "text": "<p>A Secret is an object that contains a small amount of sensitive data such as a password, a token, or a key. Such information might otherwise be put in a Pod specification or in an image; putting it in a Secret object allows for more control over how it is used, and reduces the risk of accidental exposure.</p><p>Users can create secrets, and the system also creates some secrets. To use a secret, a pod needs to reference the secret. A secret can be used with a pod in two ways: as files in a volume mounted on one or more of its containers, or used by kubelet when pulling images for the pod.</p>",
        "image": ""
      },
      {
        "text": "<p>Secrets can be mounted as data volumes or be exposed as environment variables to be used by a container in a pod. They can also be used by other parts of the system, without being directly exposed to the pod. For example, they can hold credentials that other parts of the system should use to interact with external systems on your behalf.</p>",
        "image": ""
      },
      {
        "text": "<p><b>Create files needed for rest of example: </b><ul><li><code>echo -n 'admin' > ./username.txt</code></li><li><code>echo -n '1f2d1e2e67df' > ./password.txt</code></li></ul></p>",
        "image": ""
      },
      {
        "text": "<p><b>The kubectl create secret command packages these files into a Secret and creates the object on the Apiserver: </b><code>kubectl create secret generic db-user-pass --from-file=./username.txt --from-file=./password.txt</code></p>",
        "image": ""
      },
      {
        "text": "<p><b>Check the secrets: </b><code>kubectl get secrets</code><br><code>kubectl describe secrets/db-user-pass</code></p>",
        "image": ""
      },
      {
        "text": "<p><b>Retrieved the secret: </b><code>kubectl get secret db-user-pass -o yaml</code></p>",
        "image": ""
      },
      {
        "text": "<p><b>Decode the password field: </b><code>echo 'MWYyZDFlMmU2N2Rm' | base64 --decode</code></p>",
        "image": ""
      }
    ]
  },
  {
    "id": 3000,
    "date": "2020/04/05",
    "title": "Encrypting Secret Data at Rest",
    "itemList": [
      {
        "text": "<p>Generate a 32 byte random key and base64 encode it. If youâ€™re on Linux or macOS, run the following command:<br><code>head -c 32 /dev/urandom | base64</code></p>",
        "image": ""
      },
      {
        "text": "<p>Place that value in the secret field.</p>",
        "image": ""
      },
      {
        "text": "<p>Set the --encryption-provider-config flag on the kube-apiserver to point to the location of the config file.</p>",
        "image": ""
      },
      {
        "text": "<p>Restart the API server.</p>",
        "image": ""
      }
    ]
  }
]